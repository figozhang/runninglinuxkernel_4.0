#! /usr/bin/env stap

# Copyright (C) 2006 IBM Corp.
#
# This file is part of systemtap, and is free software.  You can
# redistribute it and/or modify it under the terms of the GNU General
# Public License (GPL); either version 2, or (at your option) any
# later version.

#
# Print signal counts by process IDs in descending order.
#

global sigcnt, pid2name, sig2name

probe begin {
  print("Collecting data... Type Ctrl-C to exit and display results\n")
}

probe signal.send 
{
  rcv_pid = sig_pid

  sigcnt[pid(), rcv_pid, sig]++

  if (!(pid() in pid2name)) pid2name[pid()] = execname()
  if (!(rcv_pid in pid2name)) pid2name[rcv_pid] = pid_name
  if (!(sig in sig2name)) sig2name[sig] = sig_name 
}

probe end
{
  printf("%-8s %-16s %-5s %-16s %-16s %s\n",
         "SPID", "SENDER", "RPID", "RECEIVER", "SIGNAME", "COUNT")

  foreach ([snd_pid, rcv_pid, sig_num] in sigcnt-) {
    printf("%-8d %-16s %-5d %-16s %-16s %d\n", 
           snd_pid, pid2name[snd_pid], rcv_pid, pid2name[rcv_pid],
           sig2name[sig_num], sigcnt[snd_pid, rcv_pid, sig_num])
  }
}
