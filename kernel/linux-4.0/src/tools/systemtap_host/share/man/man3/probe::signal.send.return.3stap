'\" t
.\"     Title: probe::signal.send.return
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: March 2016
.\"    Manual: Signal Tapset
.\"    Source: SystemTap Tapset Reference
.\"  Language: English
.\"
.TH "PROBE::SIGNAL\&.SEND" "3stap" "March 2016" "SystemTap Tapset Reference" "Signal Tapset"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
probe::signal.send.return \- Signal being sent to a process completed (deprecated in SystemTap 2\&.1)
.SH "SYNOPSIS"
.sp
.nf
signal\&.send\&.return 
.fi
.SH "VALUES"
.PP
\fIname\fR
.RS 4
The name of the function used to send out the signal
.RE
.PP
\fIretstr\fR
.RS 4
The return value to either __group_send_sig_info, specific_send_sig_info, or send_sigqueue
.RE
.PP
\fIshared\fR
.RS 4
Indicates whether the sent signal is shared by the thread group\&.
.RE
.PP
\fIsend2queue\fR
.RS 4
Indicates whether the sent signal was sent to an existing sigqueue
.RE
.SH "CONTEXT"
.PP
The signal\*(Aqs sender\&. (correct?)
.SH "DESCRIPTION"
.PP
Possible __group_send_sig_info and specific_send_sig_info return values are as follows;
.PP
0 \-\- The signal is successfully sent to a process, which means that, (1) the signal was ignored by the receiving process, (2) this is a non\-RT signal and the system already has one queued, and (3) the signal was successfully added to the sigqueue of the receiving process\&.
.PP
\-EAGAIN \-\- The sigqueue of the receiving process is overflowing, the signal was RT, and the signal was sent by a user using something other than
\fBkill\fR\&.
.PP
Possible send_group_sigqueue and send_sigqueue return values are as follows;
.PP
0 \-\- The signal was either successfully added into the sigqueue of the receiving process, or a SI_TIMER entry is already queued (in which case, the overrun count will be simply incremented)\&.
.PP
1 \-\- The signal was ignored by the receiving process\&.
.PP
\-1 \-\- (send_sigqueue only) The task was marked exiting, allowing * posix_timer_event to redirect it to the group leader\&.
.SH SEE ALSO\n 
.IR tapset::signal (3stap)
